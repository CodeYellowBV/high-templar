name: Continuous Integration

on: push

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        django-version: ["2.1.1", "3.1.4"]
#        database-engine: ["postgres", "mysql"]


#############################################
    # A lot of optimization still needs to be done such as only building the
    # containers once and using the container for the flake8 test
    # But it is good enough for now
#############################################


#    services:
#      rabbitmq:
#        image: rabbitmq:management
#        env:
#          RABBITMQ_DEFAULT_USER: rabbitmq
#          RABBITMQ_DEFAULT_PASS: rabbitmq
##        options: >-
##          --health-cmd pg_isready
##          --health-interval 10s
##          --health-timeout 5s
##          --health-retries 5
#        ports:
#          - 5672:5672
#          - 15672:15672

#      backend:
#        image: backend
#        volumes:
#          - ./high_templar:/code/high_templar
#        ports:
#          - 5000:5000

#      wiremock:
#        image: rodolpheche/wiremock
#        ports:
#          - 8080:8080

#      nginx:
#        image: nginx
#        volumes:
#          - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
#        ports:
#          - 8000:8000
#          - 8001:8001

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Retrieve cached venv
        uses: actions/cache@v1
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.django-version }}-venv-${{ hashFiles('ci-requirements.txt') }}

      - name: Install requirements
        run: |
          python -m venv .venv
          .venv/bin/pip install -qr ci-requirements.txt django==${{ matrix.django-version }}
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run linting
        run: .venv/bin/flake8 high_templar

      - name: Setup Containers
        run: |
          docker-compose build rabbitmq backend wiremock nginx tester
          docker-compose up -d rabbitmq backend wiremock nginx

      - name: Run tests with pytest
        run: |
          docker-compose run tester

      - name: Upload coverage report
        uses: codecov/codecov-action@v1

      - name: Stop containers
        if: always()
        run: docker-compose down
